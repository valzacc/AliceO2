digraph "o2::ctf::EncodedBlocks&lt; H, N, W &gt;"
{
 // INTERACTIVE_SVG=YES
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node10 [label="{o2::ctf::EncodedBlocks\l\< H, N, W \>\n||+ setHeader()\l+ getHeader()\l+ getHeader()\l+ getMetadata()\l+ getMetadata()\l+ getBlock()\l+ setANSHeader()\l+ getANSHeader()\l+ getANSHeader()\l+ empty()\l+ flat()\l+ clear()\l+ compactify()\l+ size()\l+ getFreeSize()\l+ copyToFlat()\l+ copyToFlat()\l+ appendToTree()\l+ readFromTree()\l+ encode()\l+ encode()\l+ decode()\l+ decode()\l+ print()\l+ getNBlocks()\l+ getMinAlignedSize()\l+ get()\l+ get()\l+ getImage()\l+ create()\l+ create()\l+ estimateBlockSize()\l+ expand()\l+ readFromTree()\l+ createDictionaryBlocks()\l# init()\l# estimateSize()\l# estimateSizeFromMetadata()\l# fillFlatCopy()\l# ClassDefNV()\l# relocate()\l# fillTreeBranch()\l# readTreeBranch()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node11 -> Node10 [color="grey25",fontsize="10",style="solid",label=" #mMetadata" ,arrowhead="odiamond",fontname="Helvetica"];
  Node11 [label="{array\< o2::ctf::Metadata, N \>\n||}",height=0.2,width=0.4,color="grey75"];
  Node12 -> Node10 [color="grey25",fontsize="10",style="solid",label=" #mHeader" ,arrowhead="odiamond",fontname="Helvetica"];
  Node12 [label="{H\n||}",height=0.2,width=0.4,color="grey75"];
  Node13 -> Node10 [color="grey25",fontsize="10",style="solid",label=" #mBlocks" ,arrowhead="odiamond",fontname="Helvetica"];
  Node13 [label="{array\< o2::ctf::Block\l\< W \>, N \>\n||}",height=0.2,width=0.4,color="grey75"];
  Node14 -> Node10 [color="grey25",fontsize="10",style="solid",label=" #mANSHeader" ,arrowhead="odiamond",fontname="Helvetica"];
  Node14 [label="{o2::ctf::ANSHeader\n||+ clear()\l+ ClassDefNV()\l}",height=0.2,width=0.4,color="black",URL="$dc/dbb/structo2_1_1ctf_1_1ANSHeader.html",tooltip=">>======================== Auxiliary classes =======================>> "];
  Node15 -> Node14 [color="grey25",fontsize="10",style="solid",label=" +minorVersion\n+majorVersion" ,arrowhead="odiamond",fontname="Helvetica"];
  Node15 [label="{uint8_t\n||}",height=0.2,width=0.4,color="grey75"];
  Node16 -> Node10 [color="grey25",fontsize="10",style="solid",label=" #mRegistry" ,arrowhead="odiamond",fontname="Helvetica"];
  Node16 [label="{o2::ctf::Registry\n||+ getFreeBlockStart()\l+ getFreeSize()\l+ ClassDefNV()\l}",height=0.2,width=0.4,color="black",URL="$d0/d1c/structo2_1_1ctf_1_1Registry.html",tooltip="registry struct for the buffer start and offsets of writable space "];
  Node17 -> Node16 [color="grey25",fontsize="10",style="solid",label=" +head" ,arrowhead="odiamond",fontname="Helvetica"];
  Node17 [label="{char\n||}",height=0.2,width=0.4,color="grey75"];
  Node18 -> Node16 [color="grey25",fontsize="10",style="solid",label=" +offsFreeStart\n+size" ,arrowhead="odiamond",fontname="Helvetica"];
  Node18 [label="{size_t\n||}",height=0.2,width=0.4,color="grey75"];
  Node19 -> Node16 [color="grey25",fontsize="10",style="solid",label=" +nFilledBlocks" ,arrowhead="odiamond",fontname="Helvetica"];
  Node19 [label="{int\n||}",height=0.2,width=0.4,color="grey75"];
}
